// <auto-generated />
using FinalResume.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FinalResume.Migrations
{
    [DbContext(typeof(ResumeContext))]
    [Migration("20180929205157_q")]
    partial class q
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalResume.Models.applicant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<string>("WebAddress");

                    b.HasKey("ID");

                    b.ToTable("applicant");
                });

            modelBuilder.Entity("FinalResume.Models.duties", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("applicantID");

                    b.Property<int?>("experienceID");

                    b.Property<string>("summary");

                    b.HasKey("ID");

                    b.HasIndex("applicantID");

                    b.HasIndex("experienceID");

                    b.ToTable("duties");
                });

            modelBuilder.Entity("FinalResume.Models.education", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("applicantID");

                    b.Property<string>("city");

                    b.Property<string>("degreeType");

                    b.Property<string>("gradDate");

                    b.Property<string>("institution");

                    b.Property<string>("state");

                    b.Property<string>("subject");

                    b.HasKey("ID");

                    b.HasIndex("applicantID");

                    b.ToTable("education");
                });

            modelBuilder.Entity("FinalResume.Models.Experience", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("applicantID");

                    b.Property<string>("city");

                    b.Property<string>("endDate");

                    b.Property<string>("jobName");

                    b.Property<string>("placeWorked");

                    b.Property<string>("startDate");

                    b.Property<string>("state");

                    b.HasKey("ID");

                    b.HasIndex("applicantID");

                    b.ToTable("experience");
                });

            modelBuilder.Entity("FinalResume.Models.references", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("applicantID");

                    b.Property<string>("city");

                    b.Property<string>("companyName");

                    b.Property<string>("emailAddress");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<string>("mailingAddress");

                    b.Property<string>("phone");

                    b.Property<string>("state");

                    b.HasKey("ID");

                    b.HasIndex("applicantID");

                    b.ToTable("references");
                });

            modelBuilder.Entity("FinalResume.Models.skills", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("applicantID");

                    b.Property<string>("experienceLevel");

                    b.Property<string>("skillName");

                    b.Property<string>("yearsUsed");

                    b.HasKey("ID");

                    b.HasIndex("applicantID");

                    b.ToTable("skills");
                });

            modelBuilder.Entity("FinalResume.Models.duties", b =>
                {
                    b.HasOne("FinalResume.Models.applicant")
                        .WithMany("duty")
                        .HasForeignKey("applicantID");

                    b.HasOne("FinalResume.Models.Experience", "experience")
                        .WithMany("duty")
                        .HasForeignKey("experienceID");
                });

            modelBuilder.Entity("FinalResume.Models.education", b =>
                {
                    b.HasOne("FinalResume.Models.applicant", "applicant")
                        .WithMany("education")
                        .HasForeignKey("applicantID");
                });

            modelBuilder.Entity("FinalResume.Models.Experience", b =>
                {
                    b.HasOne("FinalResume.Models.applicant", "applicant")
                        .WithMany("Experiences")
                        .HasForeignKey("applicantID");
                });

            modelBuilder.Entity("FinalResume.Models.references", b =>
                {
                    b.HasOne("FinalResume.Models.applicant", "applicant")
                        .WithMany("reference")
                        .HasForeignKey("applicantID");
                });

            modelBuilder.Entity("FinalResume.Models.skills", b =>
                {
                    b.HasOne("FinalResume.Models.applicant", "applicant")
                        .WithMany("skills")
                        .HasForeignKey("applicantID");
                });
#pragma warning restore 612, 618
        }
    }
}
